plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id "com.google.protobuf" version "0.9.1"
    id 'com.google.android.gms.oss-licenses-plugin'
}

android {
    namespace 'com.dogeby.tagplayer'
    compileSdk 33

    defaultConfig {
        applicationId "com.dogeby.tagplayer"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.dogeby.tagplayer.TagPlayerTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.1.0-beta01'

    //debug
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    //test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    testImplementation "org.mockito:mockito-core:4.5.1"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    implementation "androidx.test:core-ktx:1.5.0"

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    //navigation
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    //splash screen compat library
    implementation 'androidx.core:core-splashscreen:1.0.0'

    //accompanist jetpack compose permission
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //proto datastore
    implementation "androidx.datastore:datastore:1.0.0"
    implementation "com.google.protobuf:protobuf-javalite:3.21.12"
    implementation "com.google.protobuf:protobuf-kotlin-lite:3.21.12"

    //glide
    implementation "com.github.bumptech.glide:compose:1.0.0-alpha.1"

    //gson
    implementation 'com.google.code.gson:gson:2.10.1'

    //media3
    implementation "androidx.media3:media3-exoplayer:$media3_version"
    implementation "androidx.media3:media3-ui:$media3_version"

    //accompanist system ui controller for jetpack compose
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    //play services open source licenses
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation "androidx.appcompat:appcompat:1.6.1"

    //palette api
    implementation "androidx.palette:palette-ktx:1.0.0"
}

kapt {
    correctErrorTypes true
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.12"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
                kotlin {
                    option 'lite'
                }
            }
        }
    }
}
